# -*- coding: utf-8 -*-
"""Trabalho_1_Rafael_Vinicius.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1op8Xo_QjLIj1Hz_GmZwD_JflfbTmDZVY
"""

!pip install google-colab-selenium
import google_colab_selenium as gs

from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver


driver = gs.Chrome()

url_base = "https://www.pichau.com.br/computadores/pichau-gamer?page="

num_paginas = 5
extracted_products = []

for i in range(1, num_paginas + 1):
    driver.get(url_base + str(i))

    WebDriverWait(driver, 10).until(EC.visibility_of_all_elements_located((By.CSS_SELECTOR, ".MuiGrid2-root.MuiGrid2-direction-xs-row.MuiGrid2-grid-xs-6.MuiGrid2-grid-sm-6.MuiGrid2-grid-md-4.MuiGrid2-grid-lg-3.MuiGrid2-grid-xl-2.mui-p3mq1s")))

    products = driver.find_elements(By.CSS_SELECTOR, ".MuiGrid2-root.MuiGrid2-direction-xs-row.MuiGrid2-grid-xs-6.MuiGrid2-grid-sm-6.MuiGrid2-grid-md-4.MuiGrid2-grid-lg-3.MuiGrid2-grid-xl-2.mui-p3mq1s")


    for product in products:
          descricao = product.find_element(By.CSS_SELECTOR, "h2.MuiTypography-root.MuiTypography-h6.mui-1jecgbd-product_info_title-noMarginBottom").text
          info_lista = descricao.split(', ')
          product_data = {
              "Description": info_lista
          }
          extracted_products.append(product_data)


driver.quit()
extracted_products

!pip install pandas
import pandas as pd

data = []

for product in extracted_products:
  info = product['Description']
  nome = info[0]

  data.append(
      {
          "Nome": nome,
          "Descrição" : info[1 ::]
      }
  )
df = pd.DataFrame(data)

df.to_csv('produtos.csv', index=False)

from collections import Counter

processadores = []
placas_video = []

for product in extracted_products:
    info_lista = product['Description']
    processador = info_lista[1]
    placa_video = info_lista[2]

    if processador not in processadores:
        processadores.append(processador)
    if placa_video not in placas_video:
        placas_video.append(placa_video)


processador_count = Counter()
placa_video_count = Counter()

for product in extracted_products:
      processador = product['Description'][1]
      processador_count[processador] += 1

for product in extracted_products:
      placa_video = product['Description'][2]
      placa_video_count[placa_video] += 1

if '16GB DDR4' in placa_video_count:
    del placa_video_count['16GB DDR4']

print("\nContagem de Processadores:")
print(processador_count)

print("\nContagem de Placas de Vídeo:")
print(placa_video_count)

import matplotlib.pyplot as plt

# Gráfico de barras para processadores
processador_names = list(processador_count.keys())
processador_freq = list(processador_count.values())

plt.figure(figsize=(25, 15))
plt.bar(processador_names, processador_freq, color='blue')
plt.title('Frequência de Processadores')
plt.xlabel('Processador')
plt.ylabel('Frequência')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

# Gráfico de barras para placas de vídeo
placa_video_names = list(placa_video_count.keys())
placa_video_freq = list(placa_video_count.values())

plt.figure(figsize=(20, 12))
plt.bar(placa_video_names, placa_video_freq, color='green')
plt.title('Frequência de Placas de Vídeo')
plt.xlabel('Placa de Vídeo')
plt.ylabel('Frequência')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()